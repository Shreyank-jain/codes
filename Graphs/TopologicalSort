int* topoSort(int V, vector<int> adj[]) {
    
    int *res=new int[V];
    int index=0;
    
    res[0]=1;
    vector<int> inorder(V,0);
    queue<int> q ;
    
    for(int i=0;i<V;i++)
         for(int u:adj[i])
              inorder[u]++ ;
              
    for(int i=0;i<V;i++)
         if(inorder[i]==0)
              q.push(i);

    while(!q.empty())
    {
        int u=q.front();
        res[index++]=u;
        
        for(int v:adj[u])
        {
            inorder[v]--;
            if(inorder[v]==0)
            {
                q.push(v);
            }
        }
        q.pop();
    }
    return res ;
}


----------------------------------------------------------------------
Input
2
6 6
5 0 5 2 2 3 4 0 4 1 1 3
3 4
3 0 1 0 2 0

Output:
1
1

Explanation:
Testcase 1: The output 1 denotes that the order is valid.  
So, if you have implemented your function correctly, then output would be 1 for all test cases.
