bool detectCycle(vector<int> g[], int visit[], int n, int i)
{
    visit[i]=1;
    queue<int> q;
    q.push(i);
    int p[n]={0};
    p[0]=-1;
    while(!q.empty())
    {
        int u=q.front();
        q.pop();
        for(auto it=g[u].begin();it!=g[u].end();it++)
        {
            if(visit[*it]==0)
            {
                visit[*it]=1;
                q.push(*it);
                p[*it]=u;
            }
            else if(p[u]!=*it)
                return true;
            
        }
    }
    return false;
}

bool isCyclic(vector<int> g[], int V)
{
    int visit[V]={0};
    for(int i=0;i<V;i++)
    {
        if(visit[i]==0)
            if(detectCycle(g,visit,V,i)==true)
                return true;
    }
    return false;
}


--------------------------------------------------------------------------------------
Input:
3
2 1
0 1
4 3
0 1 1 2 2 3
5 4
0 1 2 3 3 4 4 2

Output:
0
0
1
