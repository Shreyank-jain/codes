-----using Structure------------


#include<bits/stdc++.h> 
using namespace std;

struct Activity{
    int start , end ; 
};

bool activityCompare(Activity s1 , Activity s2){
    return s1.end<s2.end; 
}

int main()
 {
	int test ;
	cin>>test ;
	while(test--){
	    int n ;
	    cin>>n ;
	    Activity arr[n] ;
	    for(int x = 0 ;x<n;x++){
	        cin>>arr[x].start ;
	    }
	    
	    for(int x =0;x<n;x++){
	        cin>>arr[x].end; 
	    }
	 sort(arr , arr+n, activityCompare);
	   int y =  0 ;
	   int count =1 ;
	   for(int x = 1 ;x<n ;x++){
	       if(arr[x].start >= arr[y].end){
	           count++;
	           y = x ; 
	       }
	   }
	   cout<<count<<endl; 
	    
	}
	return 0;
}

----------Using Vector------------

#include <bits/stdc++.h>
using namespace std;
typedef long long ll;

bool comp(const pair<int,int> & a ,const pair <int,int>& b){
  return a.second<b.second;    
    
}

int main() {
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);
    int t;
    cin>>t;
    while(t--){
        int n;
        cin>>n;
        vector<int>a(n);
        vector<int>b(n);   
        for(int i=0;i<n;i++)
            cin>>a[i];
        for(int i=0;i<n;i++)
            cin>>b[i];         
   
   vector< pair<int, int> > v;

   for(int i=0;i<n;i++)    v.push_back(make_pair(a[i],b[i]));

   sort(v.begin(),v.end(), comp);

    int i=0;
    int c=1;
    for(int j=1;j<n;j++){
        if(v[j].first>=v[i].second){c++;
        i=j;}
    }

   cout<<c<<endl;
     }    
	return 0;
}
-------------------------------------------------------------------------------------
Input:
2
6
1 3 2 5 8 5
2 4 6 7 9 9
4
1 3 2 5
2 4 3 6

Output:
4
4
