#include <bits/stdc++.h> 
using namespace std; 

int findMin(int arr[], int n) 
{ 
	int sum = 0; 
	for (int i = 0; i < n; i++) 
		sum += arr[i]; 

	bool dp[n+1][sum+1]; 

	for (int i = 0; i <= n; i++) 
		dp[i][0] = true; 

	for (int i = 1; i <= sum; i++) 
		dp[0][i] = false; 

	for (int i=1; i<=n; i++) 
	{ 
		for (int j=1; j<=sum; j++) 
		{ 
			dp[i][j] = dp[i-1][j]; 

			if (arr[i-1] <= j) 
				dp[i][j] += dp[i-1][j-arr[i-1]]; 
		} 
	} 
	int diff = INT_MAX; 
	
	for (int j=sum/2; j>=0; j--) 
	{ 
		if (dp[n][j] == true) 
		{ 
			diff = sum-2*j; 
			break; 
		} 
	} 
	return diff; 
} 

int main()
 {
    ios_base::sync_with_stdio(false) ;
    cin.tie(NULL);
	int tc,n;
	cin>>tc ;
	
	while(tc--)
	{
	  cin>>n ;
	  int arr[n];
	  for(int i=0;i<n;i++)
	      cin>>arr[i];
	      
	  cout<<findMin(arr , n)<<endl ;
	}
	
	return 0;
}

------------------------------------------------------

Given an array, the task is to divide it into two sets S1 and S2 such that the absolute difference between their sums is minimum.

Input:
2
4
1 6 5 11
4
36 7 46 40

Output : 
1
23
