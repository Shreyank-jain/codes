int height(Node *root,int &ans)
{
    if(!root)  return INT_MIN;
    
    if(!root->left && !root->right)  return root->data;
    
    int lheight = height(root->left,ans);
    int rheight = height(root->right,ans);
    
    if(root->left && root->right)
           ans =  max(root->data+lheight+rheight,ans);
    
    return max(lheight,rheight)+root->data;
}
int maxPathSum(Node *root) {
    
    int ans=INT_MIN;
    height(root,ans);
    return ans;
}


-----------------------------------------------------------------------
Input:

2
3 4 5 -10 4
-15 5 6 -8 1 3 9 2 -3 N N N N N 0 N N N N 4 -1 N N 10 N

Output:

16
27

Explanation:
Testcase 2: The maximum possible sum from one leaf node to another is (3 + 6 + 9 + 0 + -1 + 10 = 27)
