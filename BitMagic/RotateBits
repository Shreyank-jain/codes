Given an integer N and an integer D, you are required to write a program to rotate the binary representation
of the integer N by D digits to the left as well as right and print the results in decimal values after each of the rotation.
Note: Integer N is stored using 16 bits. i.e. 12 will be stored as 0000.....001100.

#include<bits/stdc++.h>
using namespace std;
#define INT_BITS 16
unsigned short int left(int n,int k)
{
    return( (n<<k) |  (n>>(INT_BITS-k)  )  );
}
unsigned short int right(int n,int k)
{
    return(  (n>>k) |   (n<<(INT_BITS-k))     );
}


int main()
 {
	int t;
	cin>>t;
	while(t--)
	{
	    unsigned short int i,n,k,g;
	    cin>>n;
	    cin>>k;
	    k=k%16;
	    cout<<left(n,k)<<endl<<right(n,k)<<endl;
	}
	return 0;
}

------------------------
Input:
2
229 3
28 2
Output:
1832
40988
112
7
